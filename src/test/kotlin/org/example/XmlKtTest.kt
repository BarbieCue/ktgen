package org.example

import io.kotest.matchers.shouldBe

class XmlKtTest : ConcurrentExpectSpec({

    context("prettyPrint") {

        expect("pretty prints a course xml string") {
            val xml = "<course><id>9a423d1e-748f-4f43-9e53-5324fa064501</id><title>Generated by ktgen</title><description></description><keyboardLayout></keyboardLayout><lessons><lesson><id>e61f4cc5-6d92-44eb-adff-0d20ed4e4795</id><title>1: en</title><newCharacters>en</newCharacters><text>abc</text></lesson></lessons></course>"
            prettyPrint(xml) shouldBe """
            <?xml version="1.0" encoding="UTF-8"?><course>
              <id>9a423d1e-748f-4f43-9e53-5324fa064501</id>
              <title>Generated by ktgen</title>
              <description/>
              <keyboardLayout/>
              <lessons>
                <lesson>
                  <id>e61f4cc5-6d92-44eb-adff-0d20ed4e4795</id>
                  <title>1: en</title>
                  <newCharacters>en</newCharacters>
                  <text>abc</text>
                </lesson>
              </lessons>
            </course>
        """.trimIndent()
        }

        expect("return the original input when an error occurs") {
            val nonPrettyMalformedXml = ": - (  <course><id>9a423d1e-748f-4f43-9e53-5324fa064501</id><title>Generated by ktgen</title><description></description><keyboardLayout></keyboardLayout><lessons><lesson><id>e61f4cc5-6d92-44eb-adff-0d20ed4e4795</id><title>1: en</title><newCharacters>en</newCharacters><text>abc</text></lesson></lessons></course>"
            prettyPrint(nonPrettyMalformedXml) shouldBe nonPrettyMalformedXml
        }

        expect("empty input leads to empty output") {
            prettyPrint("") shouldBe ""
        }
    }
})